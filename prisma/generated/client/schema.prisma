// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AccountStatus {
  INACTIVE
  ACTIVE
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id            String         @id @default(cuid())
  name          String
  email         String         @unique
  phone         String         @unique
  school        String
  course        String
  password      String // Renamed to indicate it's hashed
  emailVerified DateTime?
  status        AccountStatus  @default(INACTIVE)
  role          UserRole       @default(USER)
  announcement  Announcement[]
  messages      Message[]
  activatedBy   String?
  deactivatedBy String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model Announcement {
  announcementId String   @id @default(cuid())
  title          String
  type           String
  content        String
  visibleFrom    DateTime
  visibleTo      DateTime
  createdById    String
  creator        String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  createdBy User @relation(fields: [createdById], references: [id])
}

model Message {
  id        String   @id @default(cuid())
  message   String
  sender    String
  userId    String?
  user      User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
}
